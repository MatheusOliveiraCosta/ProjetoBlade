/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.projetoblade.view;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

/**
 * Tela de formulário para cadastro e edição de veículos
 * @author mathe
 */
public class VeiculoFormTela extends javax.swing.JFrame {

    /**
     * Creates new form VeiculoFormTela
     */
    public VeiculoFormTela() {
        initComponents();
        configurarTela();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        // Painel principal
        mainPanel = new javax.swing.JPanel();
        titleLabel = new javax.swing.JLabel();
        
        // Campos do formulário
        marcaLabel = new javax.swing.JLabel();
        modeloLabel = new javax.swing.JLabel();
        placaLabel = new javax.swing.JLabel();
        anoLabel = new javax.swing.JLabel();
        chassiLabel = new javax.swing.JLabel();
        precoLabel = new javax.swing.JLabel();
        statusLabel = new javax.swing.JLabel();
        
        marcaTextField = new javax.swing.JTextField();
        modeloTextField = new javax.swing.JTextField();
        placaTextField = new javax.swing.JTextField();
        anoTextField = new javax.swing.JTextField();
        chassiTextField = new javax.swing.JTextField();
        precoTextField = new javax.swing.JTextField();
        statusComboBox = new javax.swing.JComboBox<>();
        
        // Botões
        buttonPanel = new javax.swing.JPanel();
        salvarButton = new javax.swing.JButton();
        limparButton = new javax.swing.JButton();
        cancelarButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de Veículo");
        setResizable(false);

        // Configuração do painel principal
        mainPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(20, 20, 20, 20));
        mainPanel.setLayout(new java.awt.BorderLayout());

        // Título
        titleLabel.setFont(new java.awt.Font("Segoe UI", Font.BOLD, 18));
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText("Cadastro de Veículo");
        titleLabel.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 20, 0));

        // Labels dos campos
        marcaLabel.setText("Marca:");
        marcaLabel.setFont(new java.awt.Font("Segoe UI", Font.PLAIN, 12));
        
        modeloLabel.setText("Modelo:");
        modeloLabel.setFont(new java.awt.Font("Segoe UI", Font.PLAIN, 12));
        
        placaLabel.setText("Placa:");
        placaLabel.setFont(new java.awt.Font("Segoe UI", Font.PLAIN, 12));
        
        anoLabel.setText("Ano:");
        anoLabel.setFont(new java.awt.Font("Segoe UI", Font.PLAIN, 12));
        
        chassiLabel.setText("Chassi:");
        chassiLabel.setFont(new java.awt.Font("Segoe UI", Font.PLAIN, 12));
        
        precoLabel.setText("Preço (R$):");
        precoLabel.setFont(new java.awt.Font("Segoe UI", Font.PLAIN, 12));
        
        statusLabel.setText("Status:");
        statusLabel.setFont(new java.awt.Font("Segoe UI", Font.PLAIN, 12));

        // Configuração dos campos de texto
        marcaTextField.setColumns(20);
        marcaTextField.setFont(new java.awt.Font("Segoe UI", Font.PLAIN, 12));
        
        modeloTextField.setColumns(20);
        modeloTextField.setFont(new java.awt.Font("Segoe UI", Font.PLAIN, 12));
        
        placaTextField.setColumns(20);
        placaTextField.setFont(new java.awt.Font("Segoe UI", Font.PLAIN, 12));
        
        anoTextField.setColumns(20);
        anoTextField.setFont(new java.awt.Font("Segoe UI", Font.PLAIN, 12));
        
        chassiTextField.setColumns(20);
        chassiTextField.setFont(new java.awt.Font("Segoe UI", Font.PLAIN, 12));
        
        precoTextField.setColumns(20);
        precoTextField.setFont(new java.awt.Font("Segoe UI", Font.PLAIN, 12));

        // ComboBox de status
        statusComboBox.setFont(new java.awt.Font("Segoe UI", Font.PLAIN, 12));
        statusComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { 
            "DISPONIVEL", "VENDIDO", "MANUTENCAO", "RESERVADO" 
        }));

        // Configuração dos botões
        salvarButton.setText("Salvar");
        salvarButton.setFont(new java.awt.Font("Segoe UI", Font.BOLD, 12));
        salvarButton.setPreferredSize(new java.awt.Dimension(100, 35));
        salvarButton.setBackground(new java.awt.Color(34, 139, 34));
        salvarButton.setForeground(java.awt.Color.WHITE);
        salvarButton.setFocusPainted(false);

        limparButton.setText("Limpar");
        limparButton.setFont(new java.awt.Font("Segoe UI", Font.PLAIN, 12));
        limparButton.setPreferredSize(new java.awt.Dimension(100, 35));
        limparButton.setBackground(new java.awt.Color(70, 130, 180));
        limparButton.setForeground(java.awt.Color.WHITE);
        limparButton.setFocusPainted(false);

        cancelarButton.setText("Cancelar");
        cancelarButton.setFont(new java.awt.Font("Segoe UI", Font.PLAIN, 12));
        cancelarButton.setPreferredSize(new java.awt.Dimension(100, 35));
        cancelarButton.setBackground(new java.awt.Color(220, 20, 60));
        cancelarButton.setForeground(java.awt.Color.WHITE);
        cancelarButton.setFocusPainted(false);

        // Layout do painel de botões
        buttonPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 10, 10));
        buttonPanel.add(salvarButton);
        buttonPanel.add(limparButton);
        buttonPanel.add(cancelarButton);

        // Layout do formulário
        javax.swing.GroupLayout formLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(formLayout);
        
        formLayout.setHorizontalGroup(
            formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(titleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(formLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(formLayout.createSequentialGroup()
                        .addGroup(formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(marcaLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                            .addComponent(modeloLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(placaLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(anoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(chassiLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(precoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(statusLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(20, 20, 20)
                        .addGroup(formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(marcaTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                            .addComponent(modeloTextField)
                            .addComponent(placaTextField)
                            .addComponent(anoTextField)
                            .addComponent(chassiTextField)
                            .addComponent(precoTextField)
                            .addComponent(statusComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(buttonPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(20, 20, 20))
        );
        
        formLayout.setVerticalGroup(
            formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formLayout.createSequentialGroup()
                .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(marcaLabel)
                    .addComponent(marcaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(modeloLabel)
                    .addComponent(modeloTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(placaLabel)
                    .addComponent(placaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(anoLabel)
                    .addComponent(anoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chassiLabel)
                    .addComponent(chassiTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(precoLabel)
                    .addComponent(precoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(statusLabel)
                    .addComponent(statusComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(buttonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        getContentPane().add(mainPanel, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Configurações adicionais da tela
     */
    private void configurarTela() {
        // Centralizar a janela na tela
        setLocationRelativeTo(null);
        
        // Configurar ações dos botões
        limparButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                limparCampos();
            }
        });
        
        cancelarButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                dispose();
            }
        });
        
        // Configurar Enter nos campos
        configurarEnterKey();
    }
    
    /**
     * Configura a tecla Enter para navegar entre os campos
     */
    private void configurarEnterKey() {
        ActionListener enterAction = new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                transferFocus();
            }
        };
        
        marcaTextField.addActionListener(enterAction);
        modeloTextField.addActionListener(enterAction);
        placaTextField.addActionListener(enterAction);
        anoTextField.addActionListener(enterAction);
        chassiTextField.addActionListener(enterAction);
        precoTextField.addActionListener(enterAction);
    }

    // Métodos getters para os campos
    public String getMarca() {
        return marcaTextField.getText().trim();
    }

    public String getModelo() {
        return modeloTextField.getText().trim();
    }

    public String getPlaca() {
        return placaTextField.getText().trim().toUpperCase();
    }

    public String getAno() {
        return anoTextField.getText().trim();
    }
    
    public String getChassi() {
        return chassiTextField.getText().trim().toUpperCase();
    }
    
    public String getPreco() {
        return precoTextField.getText().trim();
    }
    
    public String getStatus() {
        return (String) statusComboBox.getSelectedItem();
    }

    // Método para o Controller adicionar um "ouvinte" de ação ao botão
    public void addSalvarListener(java.awt.event.ActionListener listener) {
        salvarButton.addActionListener(listener);
    }
    
    /**
     * Limpa todos os campos do formulário
     */
    public void limparCampos() {
        marcaTextField.setText("");
        modeloTextField.setText("");
        placaTextField.setText("");
        anoTextField.setText("");
        chassiTextField.setText("");
        precoTextField.setText("");
        statusComboBox.setSelectedIndex(0);
        marcaTextField.requestFocus();
    }
    
    /**
     * Preenche os campos com dados de um veículo
     */
    public void preencherCampos(String marca, String modelo, String placa, String ano, 
                               String chassi, String preco, String status) {
        marcaTextField.setText(marca);
        modeloTextField.setText(modelo);
        placaTextField.setText(placa);
        anoTextField.setText(ano);
        chassiTextField.setText(chassi);
        precoTextField.setText(preco);
        
        // Definir status no combo box
        for (int i = 0; i < statusComboBox.getItemCount(); i++) {
            if (statusComboBox.getItemAt(i).equals(status)) {
                statusComboBox.setSelectedIndex(i);
                break;
            }
        }
    }
    
    /**
     * Valida se todos os campos obrigatórios foram preenchidos
     */
    public boolean validarCampos() {
        if (getMarca().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Campo Marca é obrigatório!", "Erro", JOptionPane.ERROR_MESSAGE);
            marcaTextField.requestFocus();
            return false;
        }
        
        if (getModelo().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Campo Modelo é obrigatório!", "Erro", JOptionPane.ERROR_MESSAGE);
            modeloTextField.requestFocus();
            return false;
        }
        
        if (getPlaca().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Campo Placa é obrigatório!", "Erro", JOptionPane.ERROR_MESSAGE);
            placaTextField.requestFocus();
            return false;
        }
        
        if (getAno().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Campo Ano é obrigatório!", "Erro", JOptionPane.ERROR_MESSAGE);
            anoTextField.requestFocus();
            return false;
        }
        
        // Validar se o ano é um número válido
        try {
            int ano = Integer.parseInt(getAno());
            if (ano < 1900 || ano > 2024) {
                JOptionPane.showMessageDialog(this, "Ano deve estar entre 1900 e 2024!", "Erro", JOptionPane.ERROR_MESSAGE);
                anoTextField.requestFocus();
                return false;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Ano deve ser um número válido!", "Erro", JOptionPane.ERROR_MESSAGE);
            anoTextField.requestFocus();
            return false;
        }
        
        if (getChassi().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Campo Chassi é obrigatório!", "Erro", JOptionPane.ERROR_MESSAGE);
            chassiTextField.requestFocus();
            return false;
        }
        
        if (getPreco().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Campo Preço é obrigatório!", "Erro", JOptionPane.ERROR_MESSAGE);
            precoTextField.requestFocus();
            return false;
        }
        
        // Validar se o preço é um número válido
        try {
            double preco = Double.parseDouble(getPreco().replace(",", "."));
            if (preco < 0) {
                JOptionPane.showMessageDialog(this, "Preço deve ser um valor positivo!", "Erro", JOptionPane.ERROR_MESSAGE);
                precoTextField.requestFocus();
                return false;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Preço deve ser um número válido!", "Erro", JOptionPane.ERROR_MESSAGE);
            precoTextField.requestFocus();
            return false;
        }
        
        return true;
    }

    private void anoTextFieldActionPerformed(java.awt.event.ActionEvent evt) {
        // Navega para o próximo campo
        chassiTextField.requestFocus();
    }

    private void modeloTextFieldActionPerformed(java.awt.event.ActionEvent evt) {
        // Navega para o próximo campo
        placaTextField.requestFocus();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VeiculoFormTela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VeiculoFormTela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VeiculoFormTela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VeiculoFormTela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VeiculoFormTela().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel mainPanel;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JLabel marcaLabel;
    private javax.swing.JLabel modeloLabel;
    private javax.swing.JLabel placaLabel;
    private javax.swing.JLabel anoLabel;
    private javax.swing.JLabel chassiLabel;
    private javax.swing.JLabel precoLabel;
    private javax.swing.JLabel statusLabel;
    private javax.swing.JTextField marcaTextField;
    private javax.swing.JTextField modeloTextField;
    private javax.swing.JTextField placaTextField;
    private javax.swing.JTextField anoTextField;
    private javax.swing.JTextField chassiTextField;
    private javax.swing.JTextField precoTextField;
    private javax.swing.JComboBox<String> statusComboBox;
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JButton salvarButton;
    private javax.swing.JButton limparButton;
    private javax.swing.JButton cancelarButton;
    // End of variables declaration//GEN-END:variables
}
